//------------------------------------------------------------------------------
// <auto-generated>
//     This code was not generated by a tool. but for stylecop suppression.
// </auto-generated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using StrixIT.Platform.Core;
using System;
using System.Linq;

namespace StrixIT.Platform.Modules.Membership.Tests
{
    [TestClass]
    public class RoleServiceTests
    {
        #region Public Methods

        //[TestInitialize]
        //public void Init()
        //{
        //    StrixPlatform.ApplicationId = MembershipTestData.AppId;
        //}

        [ClassInitialize]
        public static void Init(TestContext context)
        {
            DataMapper.CreateMap<Permission, AssignPermissionModel>();
        }

        [TestMethod()]
        public void GetNewShouldRetrieveFilledRoleModel()
        {
            var mock = new RoleServiceMock();
            mock.RoleManagerMock.Setup(m => m.PermissionQuery()).Returns(MembershipTestData.Permissions.Where(p => p.ApplicationId == MembershipTestData.AppId).AsQueryable());
            var result = mock.RoleService.Get(Guid.Empty);
            Assert.IsNotNull(result);
            Assert.AreEqual(0, result.Permissions.First().Index);
            Assert.AreEqual(3, result.Permissions.Last().Index);
        }

        [TestMethod()]
        public void GetShouldRetrieveFilledRoleModel()
        {
            var mock = new RoleServiceMock();
            mock.RoleManagerMock.Setup(m => m.PermissionQuery()).Returns(MembershipTestData.Permissions.Where(p => p.ApplicationId == MembershipTestData.AppId).AsQueryable());
            mock.RoleManagerMock.Setup(m => m.Get(MembershipTestData.GroupAdminRoleId)).Returns(MembershipTestData.GroupAdminRole);
            mock.RoleManagerMock.Setup(m => m.Query()).Returns(MembershipTestData.Roles.AsQueryable());
            var result = mock.RoleService.Get(MembershipTestData.GroupAdminRoleId);
            Assert.IsNotNull(result);
            Assert.AreEqual(0, result.Permissions.First().Index);
            Assert.AreEqual(3, result.Permissions.Last().Index);
            Assert.AreEqual(true, result.Permissions.ElementAt(1).Selected);
        }

        #endregion Public Methods
    }
}