//------------------------------------------------------------------------------
// <auto-generated>
//     This code was not generated by a tool. but for stylecop suppression.
// </auto-generated>
//------------------------------------------------------------------------------
using Moq;
using StrixIT.Platform.Web;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Principal;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;

namespace StrixIT.Platform.Modules.Membership.Tests
{
    public sealed class AccountControllerMock : IDisposable
    {
        private AccountController _controller;
        private Mock<IAuthenticationService> _authService = new Mock<IAuthenticationService>();
        private Mock<IAccountService> _accountService = new Mock<IAccountService>();
        private Mock<HttpContextBase> _httpContext = new Mock<HttpContextBase>();
        private Mock<IIdentity> _identity = new Mock<IIdentity>();
        private Mock<HttpRequestBase> _request = new Mock<HttpRequestBase>();
        private Mock<ControllerContext> _controllerContext = new Mock<ControllerContext>();

        public AccountControllerMock()
        {
            _request.Setup(r => r.Url).Returns(new Uri("http://www.strixit.com"));
            _httpContext.Setup(r => r.Request).Returns(_request.Object);
            var principal = new Mock<IPrincipal>();
            principal.Setup(p => p.Identity).Returns(_identity.Object);
            _httpContext.Setup(r => r.User).Returns(principal.Object);
            _controllerContext.Setup(c => c.HttpContext).Returns(_httpContext.Object);
            _controllerContext.Setup(c => c.IsChildAction).Returns(false);
            _controller = new AccountController(_authService.Object, _accountService.Object);
            _controller.ControllerContext = _controllerContext.Object;
        }

        public AccountController AccountController
        {
            get
            {
                return _controller;
            }
        }

        public Mock<IAccountService> AccountServiceMock
        {
            get
            {
                return _accountService;
            }
        }

        public Mock<IAuthenticationService> AuthenticationService
        {
            get
            {
                return _authService;
            }
        }

        public Mock<HttpContextBase> HttpContextBaseMock
        {
            get
            {
                return _httpContext;
            }
        }


        public Mock<HttpRequestBase> RequestMock
        {
            get
            {
                return _request;
            }
        }

        public Mock<IIdentity> IdentityMock
        {
            get
            {
                return _identity;
            }
        }

        public void Dispose()
        {
            _controller.Dispose();
        }
    }
}
