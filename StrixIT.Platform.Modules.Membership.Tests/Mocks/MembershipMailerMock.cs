//------------------------------------------------------------------------------
// <auto-generated>
//     This code was not generated by a tool. but for stylecop suppression.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using Moq;
using StrixIT.Platform.Core;

namespace StrixIT.Platform.Modules.Membership.Tests
{
    public class MembershipMailerMock
    {
        private IMembershipMailer _membershipMailer;
        private Mock<IFileSystemWrapper> _wrapperMock = new Mock<IFileSystemWrapper>();
        private Mock<IMailer> _mailerMock = new Mock<IMailer>();
        private Mock<HttpContextBase> _httpMock = new Mock<HttpContextBase>();
        private Mock<HttpRequestBase> _httpRequestMock = new Mock<HttpRequestBase>();

        public MembershipMailerMock()
        {
            _wrapperMock.Setup(w => w.GetHtmlTemplate(It.IsAny<string>(), It.IsAny<string>(), It.IsAny<string>())).Returns<string, string, string>((x, y, z) => new FileSystemWrapper().GetHtmlTemplate(string.Format("{0}\\Templates", StrixPlatform.Environment.WorkingDirectory), y, z));
            _httpRequestMock.Setup(m => m.Url).Returns(new Uri("http://www.strixit.com"));
            _httpRequestMock.Setup(m => m.ApplicationPath).Returns("/");
            _httpMock.Setup(m => m.Request).Returns(_httpRequestMock.Object);
            _membershipMailer = new MembershipMailer(_wrapperMock.Object, _mailerMock.Object, _httpMock.Object);
        }

        public IMembershipMailer MembershipMailer
        {
            get
            {
                return _membershipMailer;
            }
        }

        public Mock<IFileSystemWrapper> FileSystemWrapperMock
        {
            get
            {
                return _wrapperMock;
            }
        }

        public Mock<IMailer> MailerMock
        {
            get
            {
                return _mailerMock;
            }
        }

        public Mock<HttpContextBase> HttpContextMock
        {
            get
            {
                return _httpMock;
            }
        }
    }
}
